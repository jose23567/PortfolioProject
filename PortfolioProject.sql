SELECT * 
FROM PortfolioProject..CovidDeaths
ORDER BY 3,4

--SELECT *
--FROM PortfolioProject..CovidVaccinations
--ORDER BY 3,4

/*SELECT DATA THAT WE ARE GOING TO BE USING*/

SELECT location,date,total_cases,new_cases,total_deaths,population
FROM PortfolioProject..CovidDeaths
ORDER BY 1,2

--LOOKING AT TOTAL CASES VS TOTAL DEATHS
--SHOWS CHANCES OF DYING IF YOU CONTRACT COVID IN YOUR COUNTRY

Select DISTINCT location, date,  total_cases, total_deaths, (cast(total_deaths as float)/cast(total_cases as float))*100 as DeathPercentage
From PortfolioProject..CovidDeaths
WHERE LOCATION LIKE '%UNITED STATES%'
order by 1,2

--LOOKING AT TOTAL CASES VS POPULATION
--SHOWS WHAT PERCENTAGE OF POPULATION GOT COVID
Select location, date, population , total_cases, ROUND((CAST(total_cases as FLOAT)/cast(population as FLOAT)),7)*100 as DEATHPERCENTAGE
From PortfolioProject..CovidDeaths
WHERE LOCATION LIKE 'UNITED STATES'
AND ROUND((CAST(total_cases as FLOAT)/cast(population as FLOAT)),4)*100 < 2
ORDER BY DEATHPERCENTAGE DESC


--LOOKING AT COUNTRIES WITH HIGHEST INFECTION RATE COMPARED TO POPULATION
Select location,population,max(total_cases) as HighestInfectionCount, MAX((TOTAL_CASES/POPULATION))*100 AS 
PERCENTPOPULATIONINFECTED
From PortfolioProject..CovidDeaths
group by location, population
ORDER BY PERCENTPOPULATIONINFECTED DESC

--SHOW COUNTRIES WITH HIGHEST DEATH COUNT PER POPULATION
--SHOWING BY COUNTRIES
Select location,max(CAST(total_deaths AS INT)) as HIGHESTDEATHS, MAX((total_deaths/POPULATION))*100 AS 
PERCENTPOPULATIONDEATHS
From PortfolioProject..CovidDeaths
WHERE continent IS NOT NULL
group by location
ORDER BY PERCENTPOPULATIONDEATHS DESC


--BREAK DOWN BY CONTINENT
--SHOWING BY CONTINENT
Select continent,max(CAST(total_deaths AS INT)) as HIGHESTDEATHS, MAX((total_deaths/POPULATION))*100 AS 
PERCENTPOPULATIONDEATHS
From PortfolioProject..CovidDeaths
WHERE continent IS NOT NULL
group by continent
ORDER BY PERCENTPOPULATIONDEATHS DESC

--SHOW COUNTRIES WITH HIGHEST DEATH COUNT PER POPULATION
Select continent,max(CAST(total_deaths AS INT)) as HIGHESTDEATHS, MAX((total_deaths/POPULATION))*100 AS 
PERCENTPOPULATIONDEATHS
From PortfolioProject..CovidDeaths
WHERE continent IS NOT NULL
group by continent
ORDER BY PERCENTPOPULATIONDEATHS DESC


--CREATE PROCEDURE COVID_DEATHS_DATA --CREATED SHORCUT INSTEAD OF WRITING EVERYTHING FROM SCRATCH
--AS SELECT * 
--FROM CovidDeaths

EXEC COVID_DEATHS_DATA


--GLOBAL NUMBERS

--SELECT SUM(new_cases) AS TOTAL_CASES, SUM(cast(new_deaths AS int)) AS TOTAL_DEATHS,
--CASE WHEN SUM(new_cases) = 0 --IF DIVISOR IS 0, WILL GIVE AN ERROR, SO MAKE CASE STATMENT TO NULL TO NOT GET ERROR
--THEN NULL
--ELSE SUM(CAST(new_deaths AS INT))/SUM(new_cases) 
--END AS DEATHPERCENTAGE 
--FROM PortfolioProject..CovidDeaths
--WHERE continent IS NOT NULL
----GROUP BY date
--ORDER BY 1,2
--CHECK THIS URL FOR MORE INFO https://stackoverflow.com/questions/861778/how-to-avoid-the-divide-by-zero-error-in-sql
--OR
SELECT SUM(new_cases) AS TOTAL_CASES, SUM(CAST(new_deaths AS INT))/ NULLIF(SUM(new_cases),0) --SAME THING AS TOP
FROM PortfolioProject..CovidDeaths
WHERE continent IS NOT NULL
--GROUP BY date
ORDER BY 1,2

--ADDING MORE INFORMATION FOR FUN WITH ROUND()
SELECT date,continent,SUM(NEW_CASES) AS TOTAL_CASES, SUM(CAST(NEW_DEATHS AS INT)) AS TOTAL_DEATHS, 
ROUND(SUM(CAST(new_deaths AS INT))/ NULLIF(SUM(new_cases),0)*100,2) AS DEATHPERCENTAGE
FROM PortfolioProject..CovidDeaths
WHERE continent IS NOT NULL
GROUP BY DATE,continent
HAVING ROUND(SUM(CAST(new_deaths AS INT))/ NULLIF(SUM(new_cases),0)*100,2) IS NOT NULL
AND ROUND(SUM(CAST(new_deaths AS INT))/ NULLIF(SUM(new_cases),0)*100,2) > 0
ORDER BY DATE, continent



EXEC COVID_DEATHS_DATA

CREATE PROCEDURE COVID_VACCINATIONS_DATA
AS SELECT * FROM CovidVaccinations

EXEC COVID_VACCINATIONS_DATA


--LOCATING AT TOTAL POPULATION VS VACCINATIONS
SELECT DEA.continent,DEA.location, DEA.date,DEA.population,VAC.new_vaccinations,
--SAME AS CAST
--SUM(CONVERT(INT, VAC.NEW_VACCINATIONS))
SUM(CAST(VAC.NEW_VACCINATIONS AS INT)) OVER (PARTITION BY DEA.LOCATION 
ORDER BY DEA.LOCATION, DEA.DATE AS ROLLING_PEOPLE_VACCINATED)
FROM PortfolioProject..CovidDeaths DEA
JOIN PORTFOLIOPROJECT..COVIDVACCINATIONS VAC
	ON DEA.location = VAC.location
	AND DEA.date = DEA.date
WHERE DEA.continent IS NOT NULL
ORDER BY 2,3

--USING CTE (SAME EXAMPLE AS ABOVE)

WITH POPVSVAC (CONTINENT, LOCATION, DATE, POPULATION, NEW_VACCINATIONS, ROLLING_PEOPLE_VACCINATED)
AS
(
SELECT TOP(1000) DEA.continent,DEA.location, DEA.date,DEA.population,VAC.new_vaccinations,
--SAME AS CAST
--SUM(CONVERT(INT, VAC.NEW_VACCINATIONS))
SUM(CAST(VAC.NEW_VACCINATIONS AS INT)) OVER (PARTITION BY DEA.LOCATION 
ORDER BY DEA.LOCATION, DEA.DATE) AS ROLLING_PEOPLE_VACCINATED
FROM PortfolioProject..CovidDeaths DEA
JOIN PORTFOLIOPROJECT..COVIDVACCINATIONS VAC
	ON DEA.location = VAC.location
	AND DEA.date = DEA.date
WHERE DEA.continent IS NOT NULL
--ORDER BY 2,3
)
SELECT *,(ROLLING_PEOPLE_VACCINATED/POPULATION)*100
FROM POPVSVAC


--TEMP TABLE
DROP TABLE IF EXISTS #PERCENTPOPULATIONVACCINATED
CREATE TABLE #PERCENTPOPULATIONVACCINATED
(
CONTINENT NVARCHAR(255),
LOCATION NVARCHAR(255),
DATE DATETIME,
POPULATION NUMERIC,
NEW_VACCINATIONS NUMERIC,
ROLLING_PEOPLE_VACCINATED NUMERIC
)

INSERT INTO #PERCENTPOPULATIONVACCINATED
SELECT TOP(100000) DEA.continent,DEA.location, DEA.date,DEA.population,VAC.new_vaccinations,
SUM(CAST(VAC.NEW_VACCINATIONS AS INT)) OVER (PARTITION BY DEA.LOCATION 
ORDER BY DEA.LOCATION, DEA.DATE) AS ROLLING_PEOPLE_VACCINATED
FROM PortfolioProject..CovidDeaths DEA
JOIN PORTFOLIOPROJECT..COVIDVACCINATIONS VAC
	ON DEA.location = VAC.location
	AND DEA.date = DEA.date
WHERE DEA.continent IS NOT NULL
--ORDER BY 2,3

SELECT * ,(ROLLING_PEOPLE_VACCINATED/POPULATION)*100
FROM #PERCENTPOPULATIONVACCINATED



--CREATING VIEW TO STORE DATA FOR LATER VISUALIZATIONS

CREATE VIEW PERCENTPOPULATIONVACCINATED AS
SELECT DISTINCT TOP(1000) DEA.continent,DEA.location, DEA.date,DEA.population,VAC.new_vaccinations,
SUM(CAST(VAC.NEW_VACCINATIONS AS INT)) OVER (PARTITION BY DEA.LOCATION 
ORDER BY DEA.LOCATION, DEA.DATE) AS ROLLING_PEOPLE_VACCINATED
FROM PortfolioProject..CovidDeaths DEA
JOIN PORTFOLIOPROJECT..COVIDVACCINATIONS VAC
	ON DEA.location = VAC.location
	AND DEA.date = DEA.date
WHERE DEA.continent IS NOT NULL
--ORDER BY 2,3

SELECT * 
FROM PERCENTPOPULATIONVACCINATED












